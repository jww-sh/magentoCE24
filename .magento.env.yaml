system:                                                                                                   
  variables:                                                                                               
    ENV_RELATIONSHIPS: "PLATFORM_RELATIONSHIPS"                                                       
    ENV_ROUTES: "PLATFORM_ROUTES"                                                                     
    ENV_VARIABLES: "PLATFORM_VARIABLES"                                                               
    ENV_APPLICATION: "PLATFORM_APPLICATION"                                                           
    ENV_ENVIRONMENT: "PLATFORM_ENVIRONMENT"
    ENV_LOCKS_DIR: "PLATFORM_LOCKS_DIR"
stage:
  global:
    VERBOSE_COMMANDS: "-vvv"
    SKIP_HTML_MINIFICATION: true
    X_FRAME_CONFIGURATION: SAMEORIGIN
  build:
    #QUALITY_PATCHES: #this is where you can add patches if needed. https://experienceleague.adobe.com/en/docs/commerce-operations/tools/quality-patches-tool/usage
    #  - ACSD-58739 example format
    VERBOSE_COMMANDS: "-vvv"
    SKIP_SCD: false
    SCD_STRATEGY: "compact"
  deploy:
    VERBOSE_COMMANDS: "-vvv"
    CLEAN_STATIC_FILES: false
    SKIP_SCD: true
    MYSQL_USE_SLAVE_CONNECTION: true #only works with EE - enable during high traffic events with a db replica in place  or if you are using a highly avalible cluster https://experienceleague.adobe.com/en/docs/commerce-knowledge-base/kb/troubleshooting/database/mysql-high-load-bottleneck-in-magento-commerce-cloud#solution:~:text=down%20performance%20by-,10%2D15%25,-%2C%20which%20is%20one
    DATABASE_CONFIGURATION: #https://experienceleague.adobe.com/en/docs/commerce-knowledge-base/kb/troubleshooting/database/read-replicas-issues-synchronization-mariadb-10-6
      _merge: true
      slave_connection:
        default:
          synchronous_replication: false
    VALKEY_BACKEND: '\Magento\Framework\Cache\Backend\RemoteSynchronizedCache'
    CACHE_CONFIGURATION:
      _merge: true
      default:
        backend_options:
          use_stale_cache: false
      stale_cache_enabled:
        backend_options:
          use_stale_cache: true
      type:
        default:
          frontend: "default"
        layout:
          frontend: "stale_cache_enabled"
        block_html:
          frontend: "stale_cache_enabled"
        reflection:
          frontend: "stale_cache_enabled"
        config_integration:
          frontend: "stale_cache_enabled"
        config_integration_api:
          frontend: "stale_cache_enabled"
        translate:
          frontend: "stale_cache_enabled"
      frontend:
        default:
          id_prefix: 'PSH_'
          backend_options:
            cleanup_percentage: 20 # allow 20% of /dev/shm to be used to store redis keys.
            read_timeout: 10
            connect_retries: 3
            compress_data: 4
            compress_tags: 4
            compress_threshold: 20480
            compression_lib: 'gzip'
            preload_keys:
              - 'PSH_EAV_ENTITY_TYPES:hash'
              - 'PSH_GLOBAL_PLUGIN_LIST:hash'
              - 'PSH_DB_IS_UP_TO_DATE:hash'
              - 'PSH_SYSTEM_DEFAULT:hash'
    SESSION_CONFIGURATION:
      _merge: true
      valkey:
        timeout: 5
        disable_locking: 1
        bot_first_lifetime: 60
        bot_lifetime: 7200
        max_lifetime: 2592000
        min_lifetime: 60
    VALKEY_USE_SLAVE_CONNECTION: true
    CRON_CONSUMERS_RUNNER:
      cron_run: false # no need to run consumers in crons as we have workers
      #max_messages: 250
      #consumers: []
  post-deploy:
    WARM_UP_CONCURRENCY: 1
    WARM_UP_PAGES:
      - "index.php"
      - "product:*:*"
      - "category:*:1"
      - "store-page:/contact:1"
      - "store-page:/privacy-policy-cookie-restriction-mode:1"
